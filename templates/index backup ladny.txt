<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Warehouse Management</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    <script src="https://kit.fontawesome.com/a076d05399.js" crossorigin="anonymous"></script>
</head>
<body class="container mt-4">
    <h1 class="text-center">Warehouse Management</h1>

    <div class="row mt-4">
        <div class="col-md-6">
            <h3>Categories</h3>
            <div class="input-group mb-3">
                <input id="category-name" class="form-control" placeholder="Category Name" required>
                <button class="btn btn-primary" onclick="addCategory()">Add</button>
            </div>
            <ul id="category-list" class="list-group"></ul>
        </div>

        <div class="col-md-6">
            <h3>Products</h3>
            <div class="input-group mb-3">
                <input id="name" class="form-control" placeholder="Product Name" required>
                <input id="quantity" class="form-control" type="number" placeholder="Quantity" required>
                <select id="category-select" class="form-select"></select>
                <button class="btn btn-success" onclick="addProduct()">Add</button>
            </div>
            <div id="product-list"></div>
        </div>
    </div>

    <script>
        document.addEventListener("DOMContentLoaded", function () {
            fetchCategories();
            fetchProducts();
        });

        async function fetchCategories() {
            const response = await fetch('/categories');
            const categories = await response.json();
            document.getElementById('category-list').innerHTML = categories.map(c => `
                <li class="list-group-item d-flex justify-content-between align-items-center">
                    ${c.name}
                    <div>
                        <button class="btn btn-sm btn-warning" onclick="editCategory(${c.id}, '${encodeURIComponent(c.name)}')"><i class="fas fa-edit"></i></button>
                        <button class="btn btn-sm btn-danger" onclick="deleteCategory(${c.id})"><i class="fas fa-trash"></i></button>
                    </div>
                </li>`
            ).join('');
            document.getElementById('category-select').innerHTML = categories.map(c => `
                <option value="${c.id}">${c.name}</option>`
            ).join('');
        }

        async function fetchProducts() {
            const response = await fetch('/products');
            const products = await response.json();
            const groupedProducts = {};

            products.forEach(p => {
                const categoryName = p.category ? p.category.name : 'Uncategorized';
                if (!groupedProducts[categoryName]) {
                    groupedProducts[categoryName] = [];
                }
                groupedProducts[categoryName].push(p);
            });

            document.getElementById('product-list').innerHTML = Object.keys(groupedProducts).map(category => `
                <h4>${category}</h4>
                <ul class="list-group mb-3">
                    ${groupedProducts[category].map(p => `
                        <li class="list-group-item d-flex justify-content-between align-items-center">
                            ${p.name} - ${p.quantity}
                            <div>
                                <button class="btn btn-sm btn-warning" onclick="editProduct(${p.id}, '${encodeURIComponent(p.name)}', ${p.quantity}, ${p.category ? p.category.id : 'null'})"><i class="fas fa-edit"></i></button>
                                <button class="btn btn-sm btn-danger" onclick="deleteProduct(${p.id})"><i class="fas fa-trash"></i></button>
                            </div>
                        </li>`
                    ).join('')}
                </ul>`
            ).join('');
        }

        async function addCategory() {
            const name = document.getElementById('category-name').value;
            if (!name) return alert("Category name cannot be empty!");
            await fetch('/category', {
                method: 'POST',
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify({ name })
            });
            document.getElementById('category-name').value = "";
            fetchCategories();
        }

        async function addProduct() {
            const name = document.getElementById('name').value;
            const quantity = document.getElementById('quantity').value;
            const category_id = document.getElementById('category-select').value;
            if (!name || !quantity || !category_id) return alert("All fields must be filled!");
            await fetch('/product', {
                method: 'POST',
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify({ name, quantity, category_id })
            });
            document.getElementById('name').value = "";
            document.getElementById('quantity').value = "";
            fetchProducts();
        }

        async function deleteCategory(id) {
            if (confirm("Are you sure you want to delete this category?")) {
                await fetch(`/category/${id}`, { method: 'DELETE' });
                fetchCategories();
                fetchProducts();
            }
        }

        async function deleteProduct(id) {
            if (confirm("Are you sure you want to delete this product?")) {
                await fetch(`/product/${id}`, { method: 'DELETE' });
                fetchProducts();
            }
        }

        async function editCategory(id, name) {
            const newName = prompt("Edit category name:", decodeURIComponent(name));
            if (newName) {
                await fetch(`/category/${id}`, {
                    method: 'PUT',
                    headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify({ name: newName })
                });
                fetchCategories();
                fetchProducts();
            }
        }

        async function editProduct(id, name, quantity, categoryId) {
            const newName = prompt("Edit product name:", decodeURIComponent(name));
            const newQuantity = prompt("Edit quantity:", quantity);
            const newCategoryId = prompt("Edit category ID:", categoryId);
            if (newName && newQuantity && newCategoryId) {
                await fetch(`/product/${id}`, {
                    method: 'PUT',
                    headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify({ name: newName, quantity: newQuantity, category_id: newCategoryId })
                });
                fetchProducts();
            }
        }
    </script>
</body>
</html>
